@model List<Projektas.Models.EventSpace>
@{
    ViewBag.Title = "EventSpaceMapView";
}
<style>
    #map {
        height: 500px;
    }
</style>
<br /><br />
<div>
    <select class="form-control" id="selectedValue" onchange="radiusPaint(this)">

        <option value="">--Select Distance--</option>
        <option value="5000">5km</option>
        <option value="10000">10km</option>
        <option value="15000">15km</option>
        <option value="20000">20km</option>
        <option value="25000">25km</option>
        <option value="30000">30km</option>


    </select>
    <select class="form-control" id="selectedDValue" onchange="addMarker(this)">

        <option value="">--Select Event space--</option>
        @foreach (var item in Model)
        {
            <option value="@item.Address">@item.Address</option>
        }


    </select>
    <input id="customerName" name="customerName" type="Text" />
    <input value="Search location" type="Submit" onclick="SetPlace()" />
</div>
<br />
<div id="map"></div>

<script>
    var map;
      var geocoder;
    var citycircle;


    function initMap(zoomeLevel, latDb, longDb) {


        geocoder = new google.maps.Geocoder();
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: latDb != null ? latDb : 54.8982139, lng: longDb != null ? longDb : 23.9044817 },
            zoom: zoomeLevel != null ? zoomeLevel : 13
        });

        @foreach(var item in Model)
        {
            @:addMarkers("@item.Address");
        }

    }




    function addMarkers(address) {
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                var marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });


            }
        });
    }

    function radiusPaint(dist) {
        address = "kaunas"
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                if (typeof citycircle !== 'undefined') {
                    citycircle.setMap(null);
                }
                citycircle = new google.maps.Circle({
                    strokeColor: '#FF0000',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#FF0000',
                    fillOpacity: 0.35,
                    map: map,
                    center: map.getCenter(),
                    radius: parseInt(dist.value)
                });

            }
        });


    }

    function addMarker(addres) {
        var address = addres.value;
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                var center = results[0].geometry.location
                map.setCenter(center);
            }
        });


        }

    function SetPlace() {
        var xx = document.getElementById("customerName").value;
        var address = xx;
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                var center = results[0].geometry.location
                map.setCenter(center);
                if (typeof citycircle !== 'undefined') {
                    citycircle.setMap(null);
                }
                var element = document.getElementById("selectedValue");
                element.value = "";
                var elementt = document.getElementById("selectedDValue");
                elementt.value = "";
            }
        });


    }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDfngDC8bB0Zunct854Hc1_Y7dSCRXLfN8&callback=initMap" async defer></script>